@inject SvgService svgService
@inherits LayoutComponentBase

<div class="page">
    <MudThemeProvider @ref="@_mudThemeProvider" @bind-IsDarkMode="@_isDarkMode" Theme="_theme" />

    <MudLayout>
        <MudAppBar Elevation="1">
            <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
            <MudSpacer />
            <MudSwitch @bind-Value="_isDarkMode" Color="Color.Primary" Class="ma-4" T="bool" ThumbIcon="@(_isDarkMode == true ? Icons.Material.Filled.DarkMode : Icons.Material.Filled.LightMode)" />
            <MudIconButton Icon="@Icons.Material.Filled.MoreVert" Color="Color.Inherit" Edge="Edge.End" />
        </MudAppBar>
        <MudDrawer @bind-Open="_drawerOpen" Variant="@DrawerVariant.Persistent" Elevation="2" Width="20%">
            <MudDrawerHeader>
                <MudImage Src="@_iconSvg" />
                <MudText Typo="Typo.h5" Class="mt-1">
                    Conkers!
                </MudText>
            </MudDrawerHeader>
            <Menu />
        </MudDrawer>
        <MudMainContent>
            <Home />
        </MudMainContent>
    </MudLayout>
</div>

@code {
    bool _drawerOpen = true;
    private MudThemeProvider _mudThemeProvider;

    private string? _iconSvg;

    private MudTheme _theme = new();
    private bool _isDarkMode;

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            _isDarkMode = await _mudThemeProvider.GetSystemPreference();
            StateHasChanged();
        }
    }

    protected override async Task OnInitializedAsync()
    {
        _iconSvg = await svgService.GetDefaultSvgAsync();
    }
}